import 'package:flutter/material.dart';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:url_launcher/url_launcher.dart';

/// –ù–æ–≤–æ—Å—Ç–Ω–∞—è –ª–µ–Ω—Ç–∞ –∏–ª–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
class NewsFeed extends StatefulWidget {
  const NewsFeed({super.key});

  @override
  State<NewsFeed> createState() => _NewsFeedState();
}

class _NewsFeedState extends State<NewsFeed> {
  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API/RSS –ø–∞—Ä—Å–∏–Ω–≥.
  final List<Map<String, String>> _newsItems = [
    {'title': '–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫: –í–≤–µ–¥–∏—Ç–µ VIN –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π.', 'url': 'https://example.com/ai'},
    {'title': '–î–≤–∏–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–æ –∏–∑-–∑–∞ —Å–∏–ª—å–Ω–æ–≥–æ —Å–Ω–µ–≥–æ–ø–∞–¥–∞ –Ω–∞ —Ç—Ä–∞—Å—Å–µ –ê-3', 'url': 'https://example.com/snow'},
    {'title': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏: –°–∏—Å—Ç–µ–º–∞ 112 —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.', 'url': 'https://example.com/system'},
    {'title': '–ê–∫—Ü–∏—è: –°–¢–û "–ë–∞—Ç—ã—Ä" –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–∫–∏–¥–∫—É 15% –Ω–∞ —Ä–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ–π.', 'url': 'https://example.com/sto'},
  ];
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏
  Widget _buildNewsItem(String title, String url) {
    return InkWell(
      onTap: () async {
        final uri = Uri.parse(url);
        if (await canLaunchUrl(uri)) {
          await launchUrl(uri);
        } else {
          if (mounted) {
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(content: Text('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É: $url')),
            );
          }
        }
      },
      child: Padding(
        padding: const EdgeInsets.symmetric(vertical: 6.0),
        child: Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –Ω–æ–≤–æ—Å—Ç–∏
            Icon(
              title.contains('–ò–ò') ? Icons.flash_on : Icons.info_outline, 
              size: 18, 
              color: title.contains('–ò–ò') ? Colors.orange : Colors.blue
            ),
            const SizedBox(width: 8),
            Expanded(
              child: Text(
                title, 
                style: const TextStyle(fontSize: 14, decoration: TextDecoration.underline),
                maxLines: 2,
                overflow: TextOverflow.ellipsis,
              ),
            ),
            const Icon(Icons.arrow_forward_ios, size: 14, color: Colors.grey),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<ConnectivityResult>(
      future: Connectivity().checkConnectivity(),
      builder: (context, snapshot) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if (snapshot.connectionState == ConnectionState.waiting || snapshot.data == ConnectivityResult.none) {
          return Container(
            color: Colors.white,
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  '–õ–µ–Ω—Ç–∞ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ / –ù–æ–≤–æ—Å—Ç–∏',
                  style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Colors.red.shade800,
                  ),
                ),
                const Divider(height: 10, thickness: 1),
                const Expanded(
                  child: Center(
                    child: Text(
                      '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç—É.\n–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.',
                      textAlign: TextAlign.center,
                      style: TextStyle(color: Colors.grey),
                    ),
                  ),
                ),
              ],
            ),
          );
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–µ–Ω—Ç—É –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        return Container(
          color: Colors.white,
          padding: const EdgeInsets.only(top: 10.0, left: 16.0, right: 16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                '–õ–µ–Ω—Ç–∞ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ / –ù–æ–≤–æ—Å—Ç–∏ üì∞',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.red.shade800,
                ),
              ),
              const Divider(height: 10, thickness: 1),
              Expanded(
                child: ListView(
                  padding: EdgeInsets.zero,
                  children: _newsItems.map((item) => _buildNewsItem(item['title']!, item['url']!)).toList(),
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}